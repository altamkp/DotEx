### YamlMime:XRefMap
sorted: true
references:
- uid: DotnetEx.Maths
  name: DotnetEx.Maths
  href: api/DotnetEx.Maths.html
  commentId: N:DotnetEx.Maths
  fullName: DotnetEx.Maths
  nameWithType: DotnetEx.Maths
- uid: DotnetEx.Maths.ComparableExtensions
  name: ComparableExtensions
  href: api/DotnetEx.Maths.ComparableExtensions.html
  commentId: T:DotnetEx.Maths.ComparableExtensions
  fullName: DotnetEx.Maths.ComparableExtensions
  nameWithType: ComparableExtensions
- uid: DotnetEx.Maths.ComparableExtensions.IsBetween(System.IComparable,System.IComparable,System.IComparable)
  name: IsBetween(IComparable, IComparable, IComparable)
  href: api/DotnetEx.Maths.ComparableExtensions.html#DotnetEx_Maths_ComparableExtensions_IsBetween_System_IComparable_System_IComparable_System_IComparable_
  commentId: M:DotnetEx.Maths.ComparableExtensions.IsBetween(System.IComparable,System.IComparable,System.IComparable)
  fullName: DotnetEx.Maths.ComparableExtensions.IsBetween(System.IComparable, System.IComparable, System.IComparable)
  nameWithType: ComparableExtensions.IsBetween(IComparable, IComparable, IComparable)
- uid: DotnetEx.Maths.ComparableExtensions.IsBetween*
  name: IsBetween
  href: api/DotnetEx.Maths.ComparableExtensions.html#DotnetEx_Maths_ComparableExtensions_IsBetween_
  commentId: Overload:DotnetEx.Maths.ComparableExtensions.IsBetween
  isSpec: "True"
  fullName: DotnetEx.Maths.ComparableExtensions.IsBetween
  nameWithType: ComparableExtensions.IsBetween
- uid: DotnetEx.Maths.DoubleExtensions
  name: DoubleExtensions
  href: api/DotnetEx.Maths.DoubleExtensions.html
  commentId: T:DotnetEx.Maths.DoubleExtensions
  fullName: DotnetEx.Maths.DoubleExtensions
  nameWithType: DoubleExtensions
- uid: DotnetEx.Maths.DoubleExtensions.IsEqualApprox(System.Double,System.Double,System.Double)
  name: IsEqualApprox(double, double, double)
  href: api/DotnetEx.Maths.DoubleExtensions.html#DotnetEx_Maths_DoubleExtensions_IsEqualApprox_System_Double_System_Double_System_Double_
  commentId: M:DotnetEx.Maths.DoubleExtensions.IsEqualApprox(System.Double,System.Double,System.Double)
  name.vb: IsEqualApprox(Double, Double, Double)
  fullName: DotnetEx.Maths.DoubleExtensions.IsEqualApprox(double, double, double)
  fullName.vb: DotnetEx.Maths.DoubleExtensions.IsEqualApprox(Double, Double, Double)
  nameWithType: DoubleExtensions.IsEqualApprox(double, double, double)
  nameWithType.vb: DoubleExtensions.IsEqualApprox(Double, Double, Double)
- uid: DotnetEx.Maths.DoubleExtensions.IsEqualApprox*
  name: IsEqualApprox
  href: api/DotnetEx.Maths.DoubleExtensions.html#DotnetEx_Maths_DoubleExtensions_IsEqualApprox_
  commentId: Overload:DotnetEx.Maths.DoubleExtensions.IsEqualApprox
  isSpec: "True"
  fullName: DotnetEx.Maths.DoubleExtensions.IsEqualApprox
  nameWithType: DoubleExtensions.IsEqualApprox
- uid: DotnetEx.Maths.DoubleExtensions.IsZeroApprox(System.Double,System.Double)
  name: IsZeroApprox(double, double)
  href: api/DotnetEx.Maths.DoubleExtensions.html#DotnetEx_Maths_DoubleExtensions_IsZeroApprox_System_Double_System_Double_
  commentId: M:DotnetEx.Maths.DoubleExtensions.IsZeroApprox(System.Double,System.Double)
  name.vb: IsZeroApprox(Double, Double)
  fullName: DotnetEx.Maths.DoubleExtensions.IsZeroApprox(double, double)
  fullName.vb: DotnetEx.Maths.DoubleExtensions.IsZeroApprox(Double, Double)
  nameWithType: DoubleExtensions.IsZeroApprox(double, double)
  nameWithType.vb: DoubleExtensions.IsZeroApprox(Double, Double)
- uid: DotnetEx.Maths.DoubleExtensions.IsZeroApprox*
  name: IsZeroApprox
  href: api/DotnetEx.Maths.DoubleExtensions.html#DotnetEx_Maths_DoubleExtensions_IsZeroApprox_
  commentId: Overload:DotnetEx.Maths.DoubleExtensions.IsZeroApprox
  isSpec: "True"
  fullName: DotnetEx.Maths.DoubleExtensions.IsZeroApprox
  nameWithType: DoubleExtensions.IsZeroApprox
- uid: DotnetEx.Maths.DoubleExtensions.Trim(System.Double,System.Double)
  name: Trim(double, double)
  href: api/DotnetEx.Maths.DoubleExtensions.html#DotnetEx_Maths_DoubleExtensions_Trim_System_Double_System_Double_
  commentId: M:DotnetEx.Maths.DoubleExtensions.Trim(System.Double,System.Double)
  name.vb: Trim(Double, Double)
  fullName: DotnetEx.Maths.DoubleExtensions.Trim(double, double)
  fullName.vb: DotnetEx.Maths.DoubleExtensions.Trim(Double, Double)
  nameWithType: DoubleExtensions.Trim(double, double)
  nameWithType.vb: DoubleExtensions.Trim(Double, Double)
- uid: DotnetEx.Maths.DoubleExtensions.Trim*
  name: Trim
  href: api/DotnetEx.Maths.DoubleExtensions.html#DotnetEx_Maths_DoubleExtensions_Trim_
  commentId: Overload:DotnetEx.Maths.DoubleExtensions.Trim
  isSpec: "True"
  fullName: DotnetEx.Maths.DoubleExtensions.Trim
  nameWithType: DoubleExtensions.Trim
- uid: DotnetEx.Maths.FloatExtensions
  name: FloatExtensions
  href: api/DotnetEx.Maths.FloatExtensions.html
  commentId: T:DotnetEx.Maths.FloatExtensions
  fullName: DotnetEx.Maths.FloatExtensions
  nameWithType: FloatExtensions
- uid: DotnetEx.Maths.FloatExtensions.IsEqualApprox(System.Single,System.Single,System.Single)
  name: IsEqualApprox(float, float, float)
  href: api/DotnetEx.Maths.FloatExtensions.html#DotnetEx_Maths_FloatExtensions_IsEqualApprox_System_Single_System_Single_System_Single_
  commentId: M:DotnetEx.Maths.FloatExtensions.IsEqualApprox(System.Single,System.Single,System.Single)
  name.vb: IsEqualApprox(Single, Single, Single)
  fullName: DotnetEx.Maths.FloatExtensions.IsEqualApprox(float, float, float)
  fullName.vb: DotnetEx.Maths.FloatExtensions.IsEqualApprox(Single, Single, Single)
  nameWithType: FloatExtensions.IsEqualApprox(float, float, float)
  nameWithType.vb: FloatExtensions.IsEqualApprox(Single, Single, Single)
- uid: DotnetEx.Maths.FloatExtensions.IsEqualApprox*
  name: IsEqualApprox
  href: api/DotnetEx.Maths.FloatExtensions.html#DotnetEx_Maths_FloatExtensions_IsEqualApprox_
  commentId: Overload:DotnetEx.Maths.FloatExtensions.IsEqualApprox
  isSpec: "True"
  fullName: DotnetEx.Maths.FloatExtensions.IsEqualApprox
  nameWithType: FloatExtensions.IsEqualApprox
- uid: DotnetEx.Maths.FloatExtensions.IsZeroApprox(System.Single,System.Single)
  name: IsZeroApprox(float, float)
  href: api/DotnetEx.Maths.FloatExtensions.html#DotnetEx_Maths_FloatExtensions_IsZeroApprox_System_Single_System_Single_
  commentId: M:DotnetEx.Maths.FloatExtensions.IsZeroApprox(System.Single,System.Single)
  name.vb: IsZeroApprox(Single, Single)
  fullName: DotnetEx.Maths.FloatExtensions.IsZeroApprox(float, float)
  fullName.vb: DotnetEx.Maths.FloatExtensions.IsZeroApprox(Single, Single)
  nameWithType: FloatExtensions.IsZeroApprox(float, float)
  nameWithType.vb: FloatExtensions.IsZeroApprox(Single, Single)
- uid: DotnetEx.Maths.FloatExtensions.IsZeroApprox*
  name: IsZeroApprox
  href: api/DotnetEx.Maths.FloatExtensions.html#DotnetEx_Maths_FloatExtensions_IsZeroApprox_
  commentId: Overload:DotnetEx.Maths.FloatExtensions.IsZeroApprox
  isSpec: "True"
  fullName: DotnetEx.Maths.FloatExtensions.IsZeroApprox
  nameWithType: FloatExtensions.IsZeroApprox
- uid: DotnetEx.Maths.FloatExtensions.Trim(System.Single,System.Single)
  name: Trim(float, float)
  href: api/DotnetEx.Maths.FloatExtensions.html#DotnetEx_Maths_FloatExtensions_Trim_System_Single_System_Single_
  commentId: M:DotnetEx.Maths.FloatExtensions.Trim(System.Single,System.Single)
  name.vb: Trim(Single, Single)
  fullName: DotnetEx.Maths.FloatExtensions.Trim(float, float)
  fullName.vb: DotnetEx.Maths.FloatExtensions.Trim(Single, Single)
  nameWithType: FloatExtensions.Trim(float, float)
  nameWithType.vb: FloatExtensions.Trim(Single, Single)
- uid: DotnetEx.Maths.FloatExtensions.Trim*
  name: Trim
  href: api/DotnetEx.Maths.FloatExtensions.html#DotnetEx_Maths_FloatExtensions_Trim_
  commentId: Overload:DotnetEx.Maths.FloatExtensions.Trim
  isSpec: "True"
  fullName: DotnetEx.Maths.FloatExtensions.Trim
  nameWithType: FloatExtensions.Trim
- uid: DotnetEx.Maths.MathDef
  name: MathDef
  href: api/DotnetEx.Maths.MathDef.html
  commentId: T:DotnetEx.Maths.MathDef
  fullName: DotnetEx.Maths.MathDef
  nameWithType: MathDef
- uid: DotnetEx.Maths.MathDef.DEFAULT_PRECISION
  name: DEFAULT_PRECISION
  href: api/DotnetEx.Maths.MathDef.html#DotnetEx_Maths_MathDef_DEFAULT_PRECISION
  commentId: F:DotnetEx.Maths.MathDef.DEFAULT_PRECISION
  fullName: DotnetEx.Maths.MathDef.DEFAULT_PRECISION
  nameWithType: MathDef.DEFAULT_PRECISION
- uid: DotnetEx.Reflections
  name: DotnetEx.Reflections
  href: api/DotnetEx.Reflections.html
  commentId: N:DotnetEx.Reflections
  fullName: DotnetEx.Reflections
  nameWithType: DotnetEx.Reflections
- uid: DotnetEx.Reflections.AssemblyExtensions
  name: AssemblyExtensions
  href: api/DotnetEx.Reflections.AssemblyExtensions.html
  commentId: T:DotnetEx.Reflections.AssemblyExtensions
  fullName: DotnetEx.Reflections.AssemblyExtensions
  nameWithType: AssemblyExtensions
- uid: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes(System.Reflection.Assembly,System.Type,System.Boolean)
  name: GetDerivedTypes(Assembly, Type, bool)
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetDerivedTypes_System_Reflection_Assembly_System_Type_System_Boolean_
  commentId: M:DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes(System.Reflection.Assembly,System.Type,System.Boolean)
  name.vb: GetDerivedTypes(Assembly, Type, Boolean)
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes(System.Reflection.Assembly, System.Type, bool)
  fullName.vb: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes(System.Reflection.Assembly, System.Type, Boolean)
  nameWithType: AssemblyExtensions.GetDerivedTypes(Assembly, Type, bool)
  nameWithType.vb: AssemblyExtensions.GetDerivedTypes(Assembly, Type, Boolean)
- uid: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes*
  name: GetDerivedTypes
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetDerivedTypes_
  commentId: Overload:DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes
  isSpec: "True"
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes
  nameWithType: AssemblyExtensions.GetDerivedTypes
- uid: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes``1(System.Reflection.Assembly,System.Boolean)
  name: GetDerivedTypes<T>(Assembly, bool)
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetDerivedTypes__1_System_Reflection_Assembly_System_Boolean_
  commentId: M:DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes``1(System.Reflection.Assembly,System.Boolean)
  name.vb: GetDerivedTypes(Of T)(Assembly, Boolean)
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes<T>(System.Reflection.Assembly, bool)
  fullName.vb: DotnetEx.Reflections.AssemblyExtensions.GetDerivedTypes(Of T)(System.Reflection.Assembly, Boolean)
  nameWithType: AssemblyExtensions.GetDerivedTypes<T>(Assembly, bool)
  nameWithType.vb: AssemblyExtensions.GetDerivedTypes(Of T)(Assembly, Boolean)
- uid: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  name: GetTypesAndAttributes(Assembly, Type, bool)
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetTypesAndAttributes_System_Reflection_Assembly_System_Type_System_Boolean_
  commentId: M:DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  name.vb: GetTypesAndAttributes(Assembly, Type, Boolean)
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes(System.Reflection.Assembly, System.Type, bool)
  fullName.vb: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes(System.Reflection.Assembly, System.Type, Boolean)
  nameWithType: AssemblyExtensions.GetTypesAndAttributes(Assembly, Type, bool)
  nameWithType.vb: AssemblyExtensions.GetTypesAndAttributes(Assembly, Type, Boolean)
- uid: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes*
  name: GetTypesAndAttributes
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetTypesAndAttributes_
  commentId: Overload:DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes
  isSpec: "True"
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes
  nameWithType: AssemblyExtensions.GetTypesAndAttributes
- uid: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes``1(System.Reflection.Assembly,System.Boolean)
  name: GetTypesAndAttributes<T>(Assembly, bool)
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetTypesAndAttributes__1_System_Reflection_Assembly_System_Boolean_
  commentId: M:DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes``1(System.Reflection.Assembly,System.Boolean)
  name.vb: GetTypesAndAttributes(Of T)(Assembly, Boolean)
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes<T>(System.Reflection.Assembly, bool)
  fullName.vb: DotnetEx.Reflections.AssemblyExtensions.GetTypesAndAttributes(Of T)(System.Reflection.Assembly, Boolean)
  nameWithType: AssemblyExtensions.GetTypesAndAttributes<T>(Assembly, bool)
  nameWithType.vb: AssemblyExtensions.GetTypesAndAttributes(Of T)(Assembly, Boolean)
- uid: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  name: GetTypesWithAttribute(Assembly, Type, bool)
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetTypesWithAttribute_System_Reflection_Assembly_System_Type_System_Boolean_
  commentId: M:DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  name.vb: GetTypesWithAttribute(Assembly, Type, Boolean)
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute(System.Reflection.Assembly, System.Type, bool)
  fullName.vb: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute(System.Reflection.Assembly, System.Type, Boolean)
  nameWithType: AssemblyExtensions.GetTypesWithAttribute(Assembly, Type, bool)
  nameWithType.vb: AssemblyExtensions.GetTypesWithAttribute(Assembly, Type, Boolean)
- uid: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute*
  name: GetTypesWithAttribute
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetTypesWithAttribute_
  commentId: Overload:DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute
  isSpec: "True"
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute
  nameWithType: AssemblyExtensions.GetTypesWithAttribute
- uid: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute``1(System.Reflection.Assembly,System.Boolean)
  name: GetTypesWithAttribute<T>(Assembly, bool)
  href: api/DotnetEx.Reflections.AssemblyExtensions.html#DotnetEx_Reflections_AssemblyExtensions_GetTypesWithAttribute__1_System_Reflection_Assembly_System_Boolean_
  commentId: M:DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute``1(System.Reflection.Assembly,System.Boolean)
  name.vb: GetTypesWithAttribute(Of T)(Assembly, Boolean)
  fullName: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute<T>(System.Reflection.Assembly, bool)
  fullName.vb: DotnetEx.Reflections.AssemblyExtensions.GetTypesWithAttribute(Of T)(System.Reflection.Assembly, Boolean)
  nameWithType: AssemblyExtensions.GetTypesWithAttribute<T>(Assembly, bool)
  nameWithType.vb: AssemblyExtensions.GetTypesWithAttribute(Of T)(Assembly, Boolean)
- uid: DotnetEx.Reflections.MemberInfoExtensions
  name: MemberInfoExtensions
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html
  commentId: T:DotnetEx.Reflections.MemberInfoExtensions
  fullName: DotnetEx.Reflections.MemberInfoExtensions
  nameWithType: MemberInfoExtensions
- uid: DotnetEx.Reflections.MemberInfoExtensions.GetMemberType(System.Reflection.MemberInfo)
  name: GetMemberType(MemberInfo)
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_GetMemberType_System_Reflection_MemberInfo_
  commentId: M:DotnetEx.Reflections.MemberInfoExtensions.GetMemberType(System.Reflection.MemberInfo)
  fullName: DotnetEx.Reflections.MemberInfoExtensions.GetMemberType(System.Reflection.MemberInfo)
  nameWithType: MemberInfoExtensions.GetMemberType(MemberInfo)
- uid: DotnetEx.Reflections.MemberInfoExtensions.GetMemberType*
  name: GetMemberType
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_GetMemberType_
  commentId: Overload:DotnetEx.Reflections.MemberInfoExtensions.GetMemberType
  isSpec: "True"
  fullName: DotnetEx.Reflections.MemberInfoExtensions.GetMemberType
  nameWithType: MemberInfoExtensions.GetMemberType
- uid: DotnetEx.Reflections.MemberInfoExtensions.GetValue(System.Reflection.MemberInfo,System.Object)
  name: GetValue(MemberInfo, object)
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_GetValue_System_Reflection_MemberInfo_System_Object_
  commentId: M:DotnetEx.Reflections.MemberInfoExtensions.GetValue(System.Reflection.MemberInfo,System.Object)
  name.vb: GetValue(MemberInfo, Object)
  fullName: DotnetEx.Reflections.MemberInfoExtensions.GetValue(System.Reflection.MemberInfo, object)
  fullName.vb: DotnetEx.Reflections.MemberInfoExtensions.GetValue(System.Reflection.MemberInfo, Object)
  nameWithType: MemberInfoExtensions.GetValue(MemberInfo, object)
  nameWithType.vb: MemberInfoExtensions.GetValue(MemberInfo, Object)
- uid: DotnetEx.Reflections.MemberInfoExtensions.GetValue*
  name: GetValue
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_GetValue_
  commentId: Overload:DotnetEx.Reflections.MemberInfoExtensions.GetValue
  isSpec: "True"
  fullName: DotnetEx.Reflections.MemberInfoExtensions.GetValue
  nameWithType: MemberInfoExtensions.GetValue
- uid: DotnetEx.Reflections.MemberInfoExtensions.IsDefined*
  name: IsDefined
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_IsDefined_
  commentId: Overload:DotnetEx.Reflections.MemberInfoExtensions.IsDefined
  isSpec: "True"
  fullName: DotnetEx.Reflections.MemberInfoExtensions.IsDefined
  nameWithType: MemberInfoExtensions.IsDefined
- uid: DotnetEx.Reflections.MemberInfoExtensions.IsDefined``1(System.Reflection.MemberInfo)
  name: IsDefined<TAttribute>(MemberInfo)
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_IsDefined__1_System_Reflection_MemberInfo_
  commentId: M:DotnetEx.Reflections.MemberInfoExtensions.IsDefined``1(System.Reflection.MemberInfo)
  name.vb: IsDefined(Of TAttribute)(MemberInfo)
  fullName: DotnetEx.Reflections.MemberInfoExtensions.IsDefined<TAttribute>(System.Reflection.MemberInfo)
  fullName.vb: DotnetEx.Reflections.MemberInfoExtensions.IsDefined(Of TAttribute)(System.Reflection.MemberInfo)
  nameWithType: MemberInfoExtensions.IsDefined<TAttribute>(MemberInfo)
  nameWithType.vb: MemberInfoExtensions.IsDefined(Of TAttribute)(MemberInfo)
- uid: DotnetEx.Reflections.MemberInfoExtensions.IsDefined``1(System.Reflection.MemberInfo,System.Boolean)
  name: IsDefined<TAttribute>(MemberInfo, bool)
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_IsDefined__1_System_Reflection_MemberInfo_System_Boolean_
  commentId: M:DotnetEx.Reflections.MemberInfoExtensions.IsDefined``1(System.Reflection.MemberInfo,System.Boolean)
  name.vb: IsDefined(Of TAttribute)(MemberInfo, Boolean)
  fullName: DotnetEx.Reflections.MemberInfoExtensions.IsDefined<TAttribute>(System.Reflection.MemberInfo, bool)
  fullName.vb: DotnetEx.Reflections.MemberInfoExtensions.IsDefined(Of TAttribute)(System.Reflection.MemberInfo, Boolean)
  nameWithType: MemberInfoExtensions.IsDefined<TAttribute>(MemberInfo, bool)
  nameWithType.vb: MemberInfoExtensions.IsDefined(Of TAttribute)(MemberInfo, Boolean)
- uid: DotnetEx.Reflections.MemberInfoExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)
  name: SetValue(MemberInfo, object, object)
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_SetValue_System_Reflection_MemberInfo_System_Object_System_Object_
  commentId: M:DotnetEx.Reflections.MemberInfoExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)
  name.vb: SetValue(MemberInfo, Object, Object)
  fullName: DotnetEx.Reflections.MemberInfoExtensions.SetValue(System.Reflection.MemberInfo, object, object)
  fullName.vb: DotnetEx.Reflections.MemberInfoExtensions.SetValue(System.Reflection.MemberInfo, Object, Object)
  nameWithType: MemberInfoExtensions.SetValue(MemberInfo, object, object)
  nameWithType.vb: MemberInfoExtensions.SetValue(MemberInfo, Object, Object)
- uid: DotnetEx.Reflections.MemberInfoExtensions.SetValue*
  name: SetValue
  href: api/DotnetEx.Reflections.MemberInfoExtensions.html#DotnetEx_Reflections_MemberInfoExtensions_SetValue_
  commentId: Overload:DotnetEx.Reflections.MemberInfoExtensions.SetValue
  isSpec: "True"
  fullName: DotnetEx.Reflections.MemberInfoExtensions.SetValue
  nameWithType: MemberInfoExtensions.SetValue
- uid: DotnetEx.Reflections.TypeExtensions
  name: TypeExtensions
  href: api/DotnetEx.Reflections.TypeExtensions.html
  commentId: T:DotnetEx.Reflections.TypeExtensions
  fullName: DotnetEx.Reflections.TypeExtensions
  nameWithType: TypeExtensions
- uid: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetFieldsAndAttributes(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetFieldsAndAttributes_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetFieldsAndAttributes(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes*
  name: GetFieldsAndAttributes
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetFieldsAndAttributes_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes
  nameWithType: TypeExtensions.GetFieldsAndAttributes
- uid: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetFieldsAndAttributes<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetFieldsAndAttributes__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetFieldsAndAttributes(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetFieldsAndAttributes(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetFieldsAndAttributes<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetFieldsAndAttributes(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetFieldsWithAttribute(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetFieldsWithAttribute_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetFieldsWithAttribute(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute*
  name: GetFieldsWithAttribute
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetFieldsWithAttribute_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute
  nameWithType: TypeExtensions.GetFieldsWithAttribute
- uid: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetFieldsWithAttribute<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetFieldsWithAttribute__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetFieldsWithAttribute(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetFieldsWithAttribute(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetFieldsWithAttribute<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetFieldsWithAttribute(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetGenericInterfaceType(System.Type,System.Type)
  name: GetGenericInterfaceType(Type, Type)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetGenericInterfaceType_System_Type_System_Type_
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetGenericInterfaceType(System.Type,System.Type)
  fullName: DotnetEx.Reflections.TypeExtensions.GetGenericInterfaceType(System.Type, System.Type)
  nameWithType: TypeExtensions.GetGenericInterfaceType(Type, Type)
- uid: DotnetEx.Reflections.TypeExtensions.GetGenericInterfaceType*
  name: GetGenericInterfaceType
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetGenericInterfaceType_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetGenericInterfaceType
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetGenericInterfaceType
  nameWithType: TypeExtensions.GetGenericInterfaceType
- uid: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMembersAndAttributes(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMembersAndAttributes_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMembersAndAttributes(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes*
  name: GetMembersAndAttributes
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMembersAndAttributes_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes
  nameWithType: TypeExtensions.GetMembersAndAttributes
- uid: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMembersAndAttributes<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMembersAndAttributes__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetMembersAndAttributes(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetMembersAndAttributes(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMembersAndAttributes<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetMembersAndAttributes(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMembersWithAttribute(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMembersWithAttribute_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMembersWithAttribute(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute*
  name: GetMembersWithAttribute
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMembersWithAttribute_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute
  nameWithType: TypeExtensions.GetMembersWithAttribute
- uid: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMembersWithAttribute<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMembersWithAttribute__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetMembersWithAttribute(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetMembersWithAttribute(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMembersWithAttribute<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetMembersWithAttribute(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMethodsAndAttributes(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMethodsAndAttributes_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMethodsAndAttributes(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes*
  name: GetMethodsAndAttributes
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMethodsAndAttributes_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes
  nameWithType: TypeExtensions.GetMethodsAndAttributes
- uid: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMethodsAndAttributes<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMethodsAndAttributes__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetMethodsAndAttributes(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetMethodsAndAttributes(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMethodsAndAttributes<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetMethodsAndAttributes(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMethodsWithAttribute(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMethodsWithAttribute_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMethodsWithAttribute(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute*
  name: GetMethodsWithAttribute
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMethodsWithAttribute_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute
  nameWithType: TypeExtensions.GetMethodsWithAttribute
- uid: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetMethodsWithAttribute<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetMethodsWithAttribute__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetMethodsWithAttribute(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetMethodsWithAttribute(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetMethodsWithAttribute<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetMethodsWithAttribute(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetPropertiesAndAttributes(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetPropertiesAndAttributes_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetPropertiesAndAttributes(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes*
  name: GetPropertiesAndAttributes
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetPropertiesAndAttributes_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes
  nameWithType: TypeExtensions.GetPropertiesAndAttributes
- uid: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetPropertiesAndAttributes<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetPropertiesAndAttributes__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetPropertiesAndAttributes(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetPropertiesAndAttributes(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetPropertiesAndAttributes<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetPropertiesAndAttributes(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetPropertiesWithAttribute(Type, Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetPropertiesWithAttribute_System_Type_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute(System.Type,System.Type,System.Nullable{System.Reflection.BindingFlags})
  fullName: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute(System.Type, System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetPropertiesWithAttribute(Type, Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute*
  name: GetPropertiesWithAttribute
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetPropertiesWithAttribute_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute
  nameWithType: TypeExtensions.GetPropertiesWithAttribute
- uid: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name: GetPropertiesWithAttribute<T>(Type, BindingFlags?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_GetPropertiesWithAttribute__1_System_Type_System_Nullable_System_Reflection_BindingFlags__
  commentId: M:DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute``1(System.Type,System.Nullable{System.Reflection.BindingFlags})
  name.vb: GetPropertiesWithAttribute(Of T)(Type, BindingFlags?)
  fullName: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute<T>(System.Type, System.Reflection.BindingFlags?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.GetPropertiesWithAttribute(Of T)(System.Type, System.Reflection.BindingFlags?)
  nameWithType: TypeExtensions.GetPropertiesWithAttribute<T>(Type, BindingFlags?)
  nameWithType.vb: TypeExtensions.GetPropertiesWithAttribute(Of T)(Type, BindingFlags?)
- uid: DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType(System.Type,System.Type,System.Type@)
  name: TryGetGenericInterfaceType(Type, Type, out Type?)
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_TryGetGenericInterfaceType_System_Type_System_Type_System_Type__
  commentId: M:DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType(System.Type,System.Type,System.Type@)
  name.vb: TryGetGenericInterfaceType(Type, Type, Type)
  fullName: DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType(System.Type, System.Type, out System.Type?)
  fullName.vb: DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType(System.Type, System.Type, System.Type)
  nameWithType: TypeExtensions.TryGetGenericInterfaceType(Type, Type, out Type?)
  nameWithType.vb: TypeExtensions.TryGetGenericInterfaceType(Type, Type, Type)
- uid: DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType*
  name: TryGetGenericInterfaceType
  href: api/DotnetEx.Reflections.TypeExtensions.html#DotnetEx_Reflections_TypeExtensions_TryGetGenericInterfaceType_
  commentId: Overload:DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType
  isSpec: "True"
  fullName: DotnetEx.Reflections.TypeExtensions.TryGetGenericInterfaceType
  nameWithType: TypeExtensions.TryGetGenericInterfaceType
